function y=CompGaussianQuad(f,a,b,n,m)
    
    // gaussian nodes
    xiAll = [-sqrt(1/3),sqrt(1/3),0,0,0; ...
        -sqrt(3/5),0,sqrt(3/5),0,0; ...
        -sqrt((3+4*sqrt(0.3))/7),-sqrt((3-4*sqrt(0.3))/7), ...
        sqrt((3-4*sqrt(0.3))/7),sqrt((3+4*sqrt(0.3))/7),0; ...
        -sqrt((5+2*sqrt(10/7))/9),-sqrt((5-2*sqrt(10/7))/9),0, ...
        sqrt((5-2*sqrt(10/7))/9),sqrt((5+2*sqrt(10/7))/9)];
    
    // gaussian quad coefficients
    AiAll = [1.,1.,0.,0.,0.; ...
        0.55555555555555569,0.88888888888888895, ...
            0.55555555555555547,0.,0.; ...
        0.34785484513745357,0.65214515486254665,0.65214515486254587,...
            0.34785484513745385,0.;
        0.23692688505618903,0.47862867049936647,0.56888888888888922,...
        0.47862867049936625,0.23692688505618906];
        
    xi=xiAll(n,1:n+1);
    Ai=AiAll(n,1:n+1);

    y=0;
    aAr=a:(b-a)/m:b;
    for k=1:m    
        a=aAr(k); b=aAr(k+1);
        for i=1:n+1
            y=y+((b-a)/2)*Ai(i)*f(((b-a)*xi(i)+a+b)/2);
        end
    end
        
endfunction
